version: '3.3'
services:
  proxy:
    build: ./proxy
    image: lucj/kernelci-proxy:${TAG:-latest}
    depends_on:
      - frontend
      - backend
    ports:
      - 8080:8080
      - 8081:8081
    deploy:
      restart_policy:
        condition: on-failure
  frontend:
    build: ./frontend
    image: lucj/kernelci-frontend:${TAG:-latest}
    depends_on:
      - backend
      - redis
    deploy:
      restart_policy:
        condition: on-failure
  backend:
    build: ./backend/app
    image: lucj/kernelci-backend:${TAG:-latest}
    depends_on:
      - mongo
    deploy:
      restart_policy:
        condition: on-failure
  celery:
    build: ./backend/celery
    # image: lucj/kernelci-celery:${TAG:-latest}
    image: lucj/kernelci-celery:1.6
    depends_on:
      - redis
    deploy:
      restart_policy:
        condition: on-failure
  # celerybeat:
  #   build:
  #     context: ./backend/celery
  #     dockerfile: Dockerfile-celerybeat
  #   image: lucj/kernelci-celerybeat:${TAG:-latest}
  #   depends_on:
  #     - redis
  #   deploy:
  #     restart_policy:
  #       condition: on-failure
  #   command: sleep 100000
  redis:
    image: redis:3.2
    deploy:
      restart_policy:
        condition: on-failure
  mongo:
    image: mongo:3.4
    volumes:
      - data:/data/db
    deploy:
      restart_policy:
        condition: on-failure
volumes:
  data:
